package com.monstrous.wgpu;

import com.monstrous.wgpuUtils.WgpuJava;
import com.monstrous.wgpuUtils.WgpuJavaStruct;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUMultisampleState extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Struct.Unsigned32 count = new Struct.Unsigned32();
    private final Struct.Unsigned32 mask = new Struct.Unsigned32();
    private final Struct.Unsigned32 alphaToCoverageEnabled = new Struct.Unsigned32();

    private WGPUMultisampleState(){}

    @Deprecated
    public WGPUMultisampleState(Runtime runtime){
        super(runtime);
    }

    /**
     * Creates this struct on the java heap.
     * In general, this should <b>not</b> be used because these structs
     * cannot be directly passed into native code.
     */
    public static WGPUMultisampleState createHeap(){
        return new WGPUMultisampleState();
    }

    /**
     * Creates this struct in direct memory.
     * This is how most structs should be created (unless, they
     * are members of a nothing struct)
     *
     * @see WgpuJavaStruct#useDirectMemory
     */
    public static WGPUMultisampleState createDirect(){
        var struct = new WGPUMultisampleState();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public long getCount(){
        return count.get();
    }

    public void setCount(long x){
        this.count.set(x);
    }

    public long getMask(){
        return mask.get();
    }

    public void setMask(long x){
        this.mask.set(x);
    }

    public long getAlphaToCoverageEnabled(){
        return alphaToCoverageEnabled.get();
    }

    public void setAlphaToCoverageEnabled(long x){
        this.alphaToCoverageEnabled.set(x);
    }

}