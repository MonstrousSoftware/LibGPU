package com.monstrous.wgpu;

import com.monstrous.wgpuUtilsOLD.WgpuJava;
import com.monstrous.wgpuUtilsOLD.WgpuJavaStruct;

import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUSupportedLimits extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStructOut> nextInChain = new DynamicStructRef<>(WGPUChainedStructOut.class);
    private final WGPULimits limits = inner(WGPULimits.createHeap());

    private WGPUSupportedLimits(){}

    @Deprecated
    public WGPUSupportedLimits(Runtime runtime){
        super(runtime);
    }

    /**
     * Creates this struct on the java heap.
     * In general, this should <b>not</b> be used because these structs
     * cannot be directly passed into native code.
     */
    public static WGPUSupportedLimits createHeap(){
        return new WGPUSupportedLimits();
    }

    /**
     * Creates this struct in direct memory.
     * This is how most structs should be created (unless, they
     * are members of a nothing struct)
     *
     * @see WgpuJavaStruct#useDirectMemory
     */
    public static WGPUSupportedLimits createDirect(){
        var struct = new WGPUSupportedLimits();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStructOut> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStructOut... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public WGPULimits getLimits(){
        return limits;
    }

}