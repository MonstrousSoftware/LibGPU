package com.monstrous.wgpu;

import com.monstrous.wgpuUtilsOLD.WgpuJava;
import com.monstrous.wgpuUtilsOLD.CStrPointer;
import com.monstrous.wgpuUtilsOLD.WgpuJavaStruct;
import com.monstrous.wgpuUtilsOLD.RustCString;
import jnr.ffi.Runtime;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUTextureDescriptor extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final @CStrPointer Pointer label = new Pointer();
    private final Unsigned32 usage = new Unsigned32();
    private final Enum<WGPUTextureDimension> dimension = new Enum<>(WGPUTextureDimension.class);
    private final WGPUExtent3D size = inner(WGPUExtent3D.createHeap());
    private final Enum<WGPUTextureFormat> format = new Enum<>(WGPUTextureFormat.class);
    private final Unsigned32 mipLevelCount = new Unsigned32();
    private final Unsigned32 sampleCount = new Unsigned32();
    private final size_t viewFormatCount = new size_t();
    private final Pointer viewFormats = new Pointer();

    private WGPUTextureDescriptor(){}

    @Deprecated
    public WGPUTextureDescriptor(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUTextureDescriptor createHeap(){
        return new WGPUTextureDescriptor();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUTextureDescriptor createDirect(){
        var struct = new WGPUTextureDescriptor();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public java.lang.String getLabel(){
        return RustCString.fromPointer(label.get());
    }

    public void setLabel(java.lang.String x){
        this.label.set(RustCString.toPointer(x));
    }

    public long getUsage(){
        return usage.get();
    }

    public void setUsage(long x){
        this.usage.set(x);
    }

    public WGPUTextureDimension getDimension(){
        return dimension.get();
    }

    public void setDimension(WGPUTextureDimension x){
        this.dimension.set(x);
    }

    public WGPUExtent3D getSize(){
        return size;
    }

    public WGPUTextureFormat getFormat(){
        return format.get();
    }

    public void setFormat(WGPUTextureFormat x){
        this.format.set(x);
    }

    public long getMipLevelCount(){
        return mipLevelCount.get();
    }

    public void setMipLevelCount(long x){
        this.mipLevelCount.set(x);
    }

    public long getSampleCount(){
        return sampleCount.get();
    }

    public void setSampleCount(long x){
        this.sampleCount.set(x);
    }

    public long getViewFormatCount(){
        return viewFormatCount.get();
    }

    public void setViewFormatCount(long x){
        this.viewFormatCount.set(x);
    }

    public jnr.ffi.Pointer getViewFormats(){
        return viewFormats.get();
    }

    public void setViewFormats(jnr.ffi.Pointer x){
        this.viewFormats.set(x);
    }

}