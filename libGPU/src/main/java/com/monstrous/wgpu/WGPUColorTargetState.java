package com.monstrous.wgpu;

import com.monstrous.utils.WgpuJava;
import com.monstrous.utils.CStrPointer;
import com.monstrous.utils.WgpuJavaStruct;
import com.monstrous.utils.RustCString;
import jnr.ffi.Runtime;
import jnr.ffi.Struct;

/** NOTE: THIS FILE WAS PRE-GENERATED BY JNR_GEN! */
public class WGPUColorTargetState extends WgpuJavaStruct {

    private final DynamicStructRef<WGPUChainedStruct> nextInChain = new DynamicStructRef<>(WGPUChainedStruct.class);
    private final Enum<WGPUTextureFormat> format = new Enum<>(WGPUTextureFormat.class);
    private final DynamicStructRef<WGPUBlendState> blend = new DynamicStructRef<>(WGPUBlendState.class);
    private final Unsigned32 writeMask = new Unsigned32();

    private WGPUColorTargetState(){}

    @Deprecated
    public WGPUColorTargetState(Runtime runtime){
        super(runtime);
    }

	/**
	* Creates this struct on the java heap.
	* In general, this should <b>not</b> be used because these structs
	* cannot be directly passed into native code. 
	*/
    public static WGPUColorTargetState createHeap(){
        return new WGPUColorTargetState();
    }

	/**
	* Creates this struct in direct memory.
	* This is how most structs should be created (unless, they
	* are members of a nothing struct)
	* 
	* @see WgpuJavaStruct#useDirectMemory
	*/
    public static WGPUColorTargetState createDirect(){
        var struct = new WGPUColorTargetState();
        struct.useDirectMemory();
        return struct;
    }


    public DynamicStructRef<WGPUChainedStruct> getNextInChain(){
        return nextInChain;
    }

    public void setNextInChain(WGPUChainedStruct... x){
        if(x.length == 0 || x[0] == null){
            this.nextInChain.set(WgpuJava.createNullPointer());
        } else {
            this.nextInChain.set(x);
        }
    }

    public WGPUTextureFormat getFormat(){
        return format.get();
    }

    public void setFormat(WGPUTextureFormat x){
        this.format.set(x);
    }

    public DynamicStructRef<WGPUBlendState> getBlend(){
        return blend;
    }

    public void setBlend(WGPUBlendState... x){
        if(x.length == 0 || x[0] == null){
            this.blend.set(WgpuJava.createNullPointer());
        } else {
            this.blend.set(x);
        }
    }

    public long getWriteMask(){
        return writeMask.get();
    }

    public void setWriteMask(long x){
        this.writeMask.set(x);
    }

}